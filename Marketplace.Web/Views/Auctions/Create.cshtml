@model Marketplace.Web.ViewModels.CreateAuctionViewModel

<div class="modal-header">
    <h5 class="modal-title">Create Auction</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<form id="createForm" method="post" action="Auctions/Create/">

    <div class="modal-body">
        <div class="form-group">
            <label>
                Title
            </label>
            <input class="form-control" name="Title" value="@Model.Title" required minlength="3" maxlength="200" />
        </div>

        <div class="form-group">
            <label>
                Category
            </label>
            <select class="form-control" name="CategoryID">
                @foreach (var category in Model.Categories)
                {
                    var selected = Model.CategoryID == category.ID ? "selected" : string.Empty;
                    <option value="@category.ID" @selected>@category.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>
                Summary
            </label>
            <input class="form-control" name="Summary" value="@Model.Summary" placeholder="Add Summary" rows="3" minlength="12" maxlength="100" />
        </div>
        <div class="form-group">
            <label>
                Description
            </label>
            <input class="form-control" name="Description" value="@Model.Description" required minlength="12" maxlength="100" />
        </div>
        <div class="form-group">
            <label>
                Actual Amount
            </label>
            <input class="form-control" name="ActualAmount" value="@Model.ActualAmount" />
        </div>
        <div class="form-group">
            <label>
                Start Time
            </label>
            <input class="form-control" name="StartTime" value="@Model.StartTime" />
        </div>

        <div class="form-group">
            <label>
                End Time
            </label>
            <input class="form-control" name="EndTime" value="@Model.EndTime" />
        </div>
        <div class="form-group">
            <label>
                Select Pictures
            </label>
            <input id="auctionPictures" class="form-control" name="AuctionPictures" type="file" multiple />
            <div id="picturesArea" class="mt-2"></div>
            <input type="hidden" name="AuctionPictures" id="pictureIDs" />

        </div>
        <div id="formErrors" class="form-group bg-danger" style="display:none">

        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Close</button>
        <button type="button" id="saveButton" class="btn btn-outline-success">
            Save
        </button>
    </div>
</form>
@section Scripts{

    <script>

    $('input[name = "StartTime"]').daterangepicker({
        "singleDatePicker": true,
    });
    $('input[name = "EndTime"]').daterangepicker({
        "singleDatePicker": true,
    });

    $("#createForm").validate({
        errorClass: "alert alert-danger",
        errorElement: "div",
        rules: {
            Title: {
                required: true,
                minlength: 3,
                maxlength: 150
            },
            CategoryID: {
                required: true,
            },
            Summary: {
                required: true,
                minlength: 3,
                maxlength: 150
            },
            Description: {
                required: true,
                minlength: 3,
            },
            ActualAmount: {
                required: true,
                range: [1, 10000000]
            },
        },
        messages: {
            Title: {
                required: "Title is required.",
                minlength: "Minimum Length is 3",
                maxlength: "Maximum Length is 150"
            },
            CategoryID: {
                required: "Please select a category.",
            },
            Summary: {
                required: "Summary is required.",
                minlength: "Minimum Length is 3",
                maxlength: "Maximum Length is 150"
            },
            Description: {
                required: "Description is required.",
                minlength: "Minimum Length is 3",
                maxlength: "Maximum Length is 150"
            },
            ActualAmount: {
                required: "ActualAmount is required.",
                range: "Actual Amount must be between 1, 10000000.",
            },
        },
        highlight: function (element, errorClass) {
            $(element).removeClass(errorClass);
        }
    });



    $("#saveButton").click(function () {

        if ($("#createForm").valid()) {

         var imageIDs = [];

        $("#picturesArea .image").each(function () {
            var imageID = $(this).attr("data-id");

            imageIDs.push(imageID);
        });

         $("#pictureIDs").val(imageIDs.join());

        $.ajax({
            url: "@Url.Action("Create", "Auctions")",
            method: "post",
            data: $("#createForm").serialize()
        })
            .done(function (response) {

                if (response.Success)
                {
                    ReloadListing();
                    $('#formModal').modal('toggle');
                }
                else
                {
                    $("#formErrors").html(response.Error);
                    $("#formErrors").show();
                }

            });
         }
    });
    $("#auctionPictures").change(function () {

        var pictures = this.files;
        var picsData = new FormData();
        for (var i = 0; i < pictures.length; i++) {
            picsData.append("Picture", pictures[i]);
        }
        $.ajax({
            url: "@Url.Action("UploadPictures", "Shared")",
            type: "post",
            data: picsData,
            dataType: "json",
            processData: false,
            contentType: false
        })
            .done(function (responses) {

                for (var i = 0; i < responses.length; i++)
                {
                    var picResponse = responses[i];
                      AttachNewImage(picResponse.pictureURL, picResponse.pictureID);
                }
            });
    });

    </script>


}

