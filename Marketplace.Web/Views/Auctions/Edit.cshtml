@model Marketplace.Web.ViewModels.CreateAuctionViewModel

<div class="modal-header">
    <h5 class="modal-title">Edit Auction</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<form id="editForm" method="post" >

    <div class="modal-body">
        <input class="form-group" type="hidden" name="ID" value="@Model.ID" />
        <div class="form-group">
            <label>
                Title
            </label>
            <input class="form-control" name="Title" value="@Model.Title" />
        </div>
        <div class="form-group">
            <label>
                Category
            </label>
            <select class="form-control" name="CategoryID">
                @foreach (var category in Model.Categories)
                {

                    var selected = category.ID == Model.CategoryID ? "selected" : string.Empty;
                    <option value="@category.ID" @selected> @category.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>
                Description
            </label>
            <input class="form-control" name="Description" value="@Model.Description" />
        </div>
        <div class="form-group">
            <label>
                Actual Amount
            </label>
            <input class="form-control" name="ActualAmount" value="@Model.ActualAmount" />
        </div>
        <div class="form-group">
            <label>
                Start Time
            </label>
            <input class="form-control" name="StartTime" value="@Model.StartTime" />
        </div>
        <div class="form-group">
            <label>
                End Time
            </label>
            <input class="form-control" name="EndTime" value="@Model.EndTime" />
        </div>
        <div class="form-group">
            <label>
                Select Pictures
            </label>
            <input id="auctionPictures" class="form-control" name="AuctionPictures" type="file" multiple />
            <div id="picturesArea">
                @if (Model.AuctionPicturesList != null && Model.AuctionPicturesList.Count > 0)
                {
                    foreach (var picture in Model.AuctionPicturesList)
                    {
                        <img class='image img-fluid' src='/content/images/@picture.Picture.URL' data-id="@picture.ID" />
                    }
                }

            </div>
            <input type="hidden" name="AuctionPictures" id="pictureIDs" />

        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Close</button>
        <button type="button" id="saveButton" class="btn btn-outline-success">
            Save
        </button>
    </div>
</form>

<script>
    RemoveImagesOnClick();

    $("#saveButton").click(function () {

        var imageIDs = [];
        $("#picturesArea .image").each(function () {
            var imageID = $(this).attr("data-id");
            imageIDs.push(imageID);
        });
        $("#pictureIDs").val(imageIDs.join());


        $.ajax({
            url: "@Url.Action("Edit", "Auctions")",
            method: "post",
            data: $("#editForm").serialize()
        })
            .done(function (response) {
                $("#formModal").modal('toggle');
                $("#listingArea").html(response);

            });
    });

     $("#auctionPictures").change(function () {

        var pictures = this.files;
        var picsData = new FormData();
        for (var i = 0; i < pictures.length; i++) {
            picsData.append("Picture", pictures[i]);
        }
        $.ajax({
            url: "@Url.Action("UploadPictures", "Shared")",
            type: "POST",
            data: picsData,
            dataType: "JSON",
            processData: false,
            contentType: false
        })
            .done(function (responses) {

                for (var i = 0; i < responses.length; i++)
                {
                    var picResponse = responses[i];
                      AttachNewImage(picResponse.pictureURL, picResponse.pictureID);
                }
            });
    });

</script>
